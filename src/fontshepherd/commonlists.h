/* Copyright (C) 2022 by Alexey Kryukov
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 3. Neither the name of the copyright holder nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE. */

#ifndef _FONSHEPHERD_COMMONLISTS_H
#define _FONSHEPHERD_COMMONLISTS_H
#include <stdint.h>
#include <vector>
#include <string>

namespace FontShepherd {
    struct numbered_string {
	uint16_t ID;
	std::string name;
    };

    struct ms_language {
	std::string language;
	std::string region;
	uint16_t code;
    };

    enum platform {
	plt_unicode = 0,
	plt_mac = 1,
	plt_iso = 2,
	plt_windows = 3,
	plt_custom = 4
    };

    const std::vector<struct numbered_string> platforms = {
	{ 0, "Unicode" },
	{ 1, "Macintosh" },
	{ 2, "ISO 10646 (deprecated)" },
	{ 3, "Microsoft" },
	{ 4, "Custom" },
    };

    const std::vector<struct numbered_string> noEncodings = {};

    const std::vector<struct numbered_string> unicodeEncodings = {
	{ 0, "Default semantics" },
	{ 1, "Version 1.1 semantics" },
	{ 2, "ISO 10646 1993 semantics" },
	{ 3, "Unicode 2.0 or later semantics (BMP only)" },
	{ 4, "Unicode 2.0 or later semantics (non-BMP allowed)" },
	{ 5, "Unicode Variation Sequences" },
	{ 6, "Unicode full coverage" },
    };

    const std::vector<struct numbered_string> macEncodings = {
	{  0, "Roman" },
	{  1, "Japanese" },
	{  2, "Chinese (Traditional)" },
	{  3, "Korean" },
	{  4, "Arabic" },
	{  5, "Hebrew" },
	{  6, "Greek" },
	{  7, "Cyrillic" },
	{  8, "RSymbol" },
	{  9, "Devanagari" },
	{ 10, "Gurmukhi" },
	{ 11, "Gujarati" },
	{ 12, "Oriya" },
	{ 13, "Bengali" },
	{ 14, "Tamil" },
	{ 15, "Telugu" },
	{ 16, "Kannada" },
	{ 17, "Malayalam" },
	{ 18, "Sinhalese" },
	{ 19, "Burmese" },
	{ 20, "Khmer" },
	{ 21, "Thai" },
	{ 22, "Laotian" },
	{ 23, "Georgian" },
	{ 24, "Armenian" },
	{ 25, "Chinese (Simplified)" },
	{ 26, "Tibetan" },
	{ 27, "Mongolian" },
	{ 28, "Geez" },
	{ 29, "Slavic" },
	{ 30, "Vietnamese" },
	{ 31, "Sindhi" },
    };

    const std::vector<struct numbered_string> isoEncodings = {
	{ 0, "7-bit ASCII" },
	{ 1, "ISO 10646" },
	{ 2, "ISO 8859-1" },
    };

    const std::vector<struct numbered_string> windowsEncodings = {
	{  0, "Symbol" },
	{  1, "Unicode BMP-only (UCS-2)" },
	{  2, "Shift-JIS" },
	{  3, "PRC" },
	{  4, "BigFive" },
	{  5, "Wansung" },
	{  6, "Johab" },
	{  7, "(reserved)" },
	{  8, "(reserved)" },
	{  9, "(reserved)" },
	{ 10, "Unicode UCS-4" },
    };

    const std::vector<struct numbered_string> windowsCustomEncodings = {
	{ 161, "windows-1253" },
	{ 162, "windows-1254" },
	{ 163, "windows-1258" },
	{ 177, "windows-1255" },
	{ 178, "windows-1256" },
	{ 186, "windows-1257" },
	{ 204, "windows-1251" },
	{ 238, "windows-1250" },
    };

    const std::vector<struct numbered_string> macLanguages = {
	{   0, "English" },
	{   1, "French" },
	{   2, "German" },
	{   3, "Italian" },
	{   4, "Dutch" },
	{   5, "Swedish" },
	{   6, "Spanish" },
	{   7, "Danish" },
	{   8, "Portuguese" },
	{   9, "Norwegian" },
	{  10, "Hebrew" },
	{  11, "Japanese" },
	{  12, "Arabic" },
	{  13, "Finnish" },
	{  14, "Greek" },
	{  15, "Icelandic" },
	{  16, "Maltese" },
	{  17, "Turkish" },
	{  18, "Croatian" },
	{  19, "Chinese (Traditional)" },
	{  20, "Urdu" },
	{  21, "Hindi" },
	{  22, "Thai" },
	{  23, "Korean" },
	{  24, "Lithuanian" },
	{  25, "Polish" },
	{  26, "Hungarian" },
	{  27, "Estonian" },
	{  28, "Latvian" },
	{  29, "Sami" },
	{  30, "Faroese" },
	{  31, "Farsi/Persian" },
	{  32, "Russian" },
	{  33, "Chinese (Simplified)" },
	{  34, "Flemish" },
	{  35, "Irish Gaelic" },
	{  36, "Albanian" },
	{  37, "Romanian" },
	{  38, "Czech" },
	{  39, "Slovak" },
	{  40, "Slovenian" },
	{  41, "Yiddish" },
	{  42, "Serbian" },
	{  43, "Macedonian" },
	{  44, "Bulgarian" },
	{  45, "Ukrainian" },
	{  46, "Byelorussian" },
	{  47, "Uzbek" },
	{  48, "Kazakh" },
	{  49, "Azerbaijani (Cyrillic script)" },
	{  50, "Azerbaijani (Arabic script)" },
	{  51, "Armenian" },
	{  52, "Georgian" },
	{  53, "Moldavian" },
	{  54, "Kirghiz" },
	{  55, "Tajiki" },
	{  56, "Turkmen" },
	{  57, "Mongolian (Mongolian script)" },
	{  58, "Mongolian (Cyrillic script)" },
	{  59, "Pashto" },
	{  60, "Kurdish" },
	{  61, "Kashmiri" },
	{  62, "Sindhi" },
	{  63, "Tibetan" },
	{  64, "Nepali" },
	{  65, "Sanskrit" },
	{  66, "Marathi" },
	{  67, "Bengali" },
	{  68, "Assamese" },
	{  69, "Gujarati" },
	{  70, "Punjabi" },
	{  71, "Oriya" },
	{  72, "Malayalam" },
	{  73, "Kannada" },
	{  74, "Tamil" },
	{  75, "Telugu" },
	{  76, "Sinhalese" },
	{  77, "Burmese" },
	{  78, "Khmer" },
	{  79, "Lao" },
	{  80, "Vietnamese" },
	{  81, "Indonesian" },
	{  82, "Tagalog" },
	{  83, "Malay (Roman script)" },
	{  84, "Malay (Arabic script)" },
	{  85, "Amharic" },
	{  86, "Tigrinya" },
	{  87, "Galla" },
	{  88, "Somali" },
	{  89, "Swahili" },
	{  90, "Kinyarwanda/Ruanda" },
	{  91, "Rundi" },
	{  92, "Nyanja/Chewa" },
	{  93, "Malagasy" },
	{  94, "Esperanto" },
	{ 128, "Welsh" },
	{ 129, "Basque" },
	{ 130, "Catalan" },
	{ 131, "Latin" },
	{ 132, "Quechua" },
	{ 133, "Guarani" },
	{ 134, "Aymara" },
	{ 135, "Tatar" },
	{ 136, "Uighur" },
	{ 137, "Dzongkha" },
	{ 138, "Javanese (Roman script)" },
	{ 139, "Sundanese (Roman script)" },
	{ 140, "Galician" },
	{ 141, "Afrikaans" },
	{ 142, "Breton" },
	{ 143, "Inuktitut" },
	{ 144, "Scottish Gaelic" },
	{ 145, "Manx Gaelic" },
	{ 146, "Irish Gaelic (with dot above)" },
	{ 147, "Tongan" },
	{ 148, "Greek (polytonic)" },
	{ 149, "Greenlandic" },
	{ 150, "Azerbaijani (Roman script)" },
    };

    const std::vector<struct ms_language> windowsLanguages = {
	{ "Afrikaans", "South Africa", 0x0436 },
	{ "Albanian", "Albania", 0x041C },
	{ "Alsatian", "France", 0x0484 },
	{ "Amharic", "Ethiopia", 0x045E },
	{ "Arabic", "Algeria", 0x1401 },
	{ "Arabic", "Bahrain", 0x3C01 },
	{ "Arabic", "Egypt", 0x0C01 },
	{ "Arabic", "Iraq", 0x0801 },
	{ "Arabic", "Jordan", 0x2C01 },
	{ "Arabic", "Kuwait", 0x3401 },
	{ "Arabic", "Lebanon", 0x3001 },
	{ "Arabic", "Libya", 0x1001 },
	{ "Arabic", "Morocco", 0x1801 },
	{ "Arabic", "Oman", 0x2001 },
	{ "Arabic", "Qatar", 0x4001 },
	{ "Arabic", "Saudi Arabia", 0x0401 },
	{ "Arabic", "Syria", 0x2801 },
	{ "Arabic", "Tunisia", 0x1C01 },
	{ "Arabic", "U.A.E.", 0x3801 },
	{ "Arabic", "Yemen", 0x2401 },
	{ "Armenian", "Armenia", 0x042B },
	{ "Assamese", "India", 0x044D },
	{ "Azeri (Cyrillic)", "Azerbaijan", 0x082C },
	{ "Azeri (Latin)", "Azerbaijan", 0x042C },
	{ "Bashkir", "Russia", 0x046D },
	{ "Basque", "Basque", 0x042D },
	{ "Belarusian", "Belarus", 0x0423 },
	{ "Bengali", "Bangladesh", 0x0845 },
	{ "Bengali", "India", 0x0445 },
	{ "Bosnian (Cyrillic)", "Bosnia and Herzegovina", 0x201A },
	{ "Bosnian (Latin)", "Bosnia and Herzegovina", 0x141A },
	{ "Breton", "France", 0x047E },
	{ "Bulgarian", "Bulgaria", 0x0402 },
	{ "Catalan", "Catalan", 0x0403 },
	{ "Chinese", "Hong Kong S.A.R.", 0x0C04 },
	{ "Chinese", "Macao S.A.R.", 0x1404 },
	{ "Chinese", "Peopleâ€™s Republic of China", 0x0804 },
	{ "Chinese", "Singapore", 0x1004 },
	{ "Chinese", "Taiwan", 0x0404 },
	{ "Corsican", "France", 0x0483 },
	{ "Croatian", "Croatia", 0x041A },
	{ "Croatian (Latin)", "Bosnia and Herzegovina", 0x101A },
	{ "Czech", "Czech Republic", 0x0405 },
	{ "Danish", "Denmark", 0x0406 },
	{ "Dari", "Afghanistan", 0x048C },
	{ "Divehi", "Maldives", 0x0465 },
	{ "Dutch", "Belgium", 0x0813 },
	{ "Dutch", "Netherlands", 0x0413 },
	{ "English", "Australia", 0x0C09 },
	{ "English", "Belize", 0x2809 },
	{ "English", "Canada", 0x1009 },
	{ "English", "Caribbean", 0x2409 },
	{ "English", "India", 0x4009 },
	{ "English", "Ireland", 0x1809 },
	{ "English", "Jamaica", 0x2009 },
	{ "English", "Malaysia", 0x4409 },
	{ "English", "New Zealand", 0x1409 },
	{ "English", "Republic of the Philippines", 0x3409 },
	{ "English", "Singapore", 0x4809 },
	{ "English", "South Africa", 0x1C09 },
	{ "English", "Trinidad and Tobago", 0x2C09 },
	{ "English", "United Kingdom", 0x0809 },
	{ "English", "United States", 0x0409 },
	{ "English", "Zimbabwe", 0x3009 },
	{ "Estonian", "Estonia", 0x0425 },
	{ "Faroese", "Faroe Islands", 0x0438 },
	{ "Filipino", "Philippines", 0x0464 },
	{ "Finnish", "Finland", 0x040B },
	{ "French", "Belgium", 0x080C },
	{ "French", "Canada", 0x0C0C },
	{ "French", "France", 0x040C },
	{ "French", "Luxembourg", 0x140c },
	{ "French", "Principality of Monaco", 0x180C },
	{ "French", "Switzerland", 0x100C },
	{ "Frisian", "Netherlands", 0x0462 },
	{ "Galician", "Galician", 0x0456 },
	{ "Georgian", "Georgia", 0x0437 },
	{ "German", "Austria", 0x0C07 },
	{ "German", "Germany", 0x0407 },
	{ "German", "Liechtenstein", 0x1407 },
	{ "German", "Luxembourg", 0x1007 },
	{ "German", "Switzerland", 0x0807 },
	{ "Greek", "Greece", 0x0408 },
	{ "Greenlandic", "Greenland", 0x046F },
	{ "Gujarati", "India", 0x0447 },
	{ "Hausa (Latin)", "Nigeria", 0x0468 },
	{ "Hebrew", "Israel", 0x040D },
	{ "Hindi", "India", 0x0439 },
	{ "Hungarian", "Hungary", 0x040E },
	{ "Icelandic", "Iceland", 0x040F },
	{ "Igbo", "Nigeria", 0x0470 },
	{ "Indonesian", "Indonesia", 0x0421 },
	{ "Inuktitut", "Canada", 0x045D },
	{ "Inuktitut (Latin)", "Canada", 0x085D },
	{ "Irish", "Ireland", 0x083C },
	{ "isiXhosa", "South Africa", 0x0434 },
	{ "isiZulu", "South Africa", 0x0435 },
	{ "Italian", "Italy", 0x0410 },
	{ "Italian", "Switzerland", 0x0810 },
	{ "Japanese", "Japan", 0x0411 },
	{ "Kannada", "India", 0x044B },
	{ "Kazakh", "Kazakhstan", 0x043F },
	{ "Khmer", "Cambodia", 0x0453 },
	{ "Kâ€™iche", "Guatemala", 0x0486 },
	{ "Kinyarwanda", "Rwanda", 0x0487 },
	{ "Kiswahili", "Kenya", 0x0441 },
	{ "Konkani", "India", 0x0457 },
	{ "Korean", "Korea", 0x0412 },
	{ "Kyrgyz", "Kyrgyzstan", 0x0440 },
	{ "Lao", "Lao P.D.R.", 0x0454 },
	{ "Latvian", "Latvia", 0x0426 },
	{ "Lithuanian", "Lithuania", 0x0427 },
	{ "Lower Sorbian", "Germany", 0x082E },
	{ "Luxembourgish", "Luxembourg", 0x046E },
	{ "Macedonian (FYROM)", "Former Yugoslav Republic of Macedonia", 0x042F },
	{ "Malay", "Brunei Darussalam", 0x083E },
	{ "Malay", "Malaysia", 0x043E },
	{ "Malayalam", "India", 0x044C },
	{ "Maltese", "Malta", 0x043A },
	{ "Maori", "New Zealand", 0x0481 },
	{ "Mapudungun", "Chile", 0x047A },
	{ "Marathi", "India", 0x044E },
	{ "Mohawk", "Mohawk", 0x047C },
	{ "Mongolian (Cyrillic)", "Mongolia", 0x0450 },
	{ "Mongolian (Traditional)", "Peopleâ€™s Republic of China", 0x0850 },
	{ "Nepali", "Nepal", 0x0461 },
	{ "Norwegian (Bokmal)", "Norway", 0x0414 },
	{ "Norwegian (Nynorsk)", "Norway", 0x0814 },
	{ "Occitan", "France", 0x0482 },
	{ "Odia (formerly Oriya)", "India", 0x0448 },
	{ "Pashto", "Afghanistan", 0x0463 },
	{ "Polish", "Poland", 0x0415 },
	{ "Portuguese", "Brazil", 0x0416 },
	{ "Portuguese", "Portugal", 0x0816 },
	{ "Punjabi", "India", 0x0446 },
	{ "Quechua", "Bolivia", 0x046B },
	{ "Quechua", "Ecuador", 0x086B },
	{ "Quechua", "Peru", 0x0C6B },
	{ "Romanian", "Romania", 0x0418 },
	{ "Romansh", "Switzerland", 0x0417 },
	{ "Russian", "Russia", 0x0419 },
	{ "Sami (Inari)", "Finland", 0x243B },
	{ "Sami (Lule)", "Norway", 0x103B },
	{ "Sami (Lule)", "Sweden", 0x143B },
	{ "Sami (Northern)", "Finland", 0x0C3B },
	{ "Sami (Northern)", "Norway", 0x043B },
	{ "Sami (Northern)", "Sweden", 0x083B },
	{ "Sami (Skolt)", "Finland", 0x203B },
	{ "Sami (Southern)", "Norway", 0x183B },
	{ "Sami (Southern)", "Sweden", 0x1C3B },
	{ "Sanskrit", "India", 0x044F },
	{ "Serbian (Cyrillic)", "Bosnia and Herzegovina", 0x1C1A },
	{ "Serbian (Cyrillic)", "Serbia", 0x0C1A },
	{ "Serbian (Latin)", "Bosnia and Herzegovina", 0x181A },
	{ "Serbian (Latin)", "Serbia", 0x081A },
	{ "Sesotho sa Leboa", "South Africa", 0x046C },
	{ "Setswana", "South Africa", 0x0432 },
	{ "Sinhala", "Sri Lanka", 0x045B },
	{ "Slovak", "Slovakia", 0x041B },
	{ "Slovenian", "Slovenia", 0x0424 },
	{ "Spanish", "Argentina", 0x2C0A },
	{ "Spanish", "Bolivia", 0x400A },
	{ "Spanish", "Chile", 0x340A },
	{ "Spanish", "Colombia", 0x240A },
	{ "Spanish", "Costa Rica", 0x140A },
	{ "Spanish", "Dominican Republic", 0x1C0A },
	{ "Spanish", "Ecuador", 0x300A },
	{ "Spanish", "El Salvador", 0x440A },
	{ "Spanish", "Guatemala", 0x100A },
	{ "Spanish", "Honduras", 0x480A },
	{ "Spanish", "Mexico", 0x080A },
	{ "Spanish", "Nicaragua", 0x4C0A },
	{ "Spanish", "Panama", 0x180A },
	{ "Spanish", "Paraguay", 0x3C0A },
	{ "Spanish", "Peru", 0x280A },
	{ "Spanish", "Puerto Rico", 0x500A },
	{ "Spanish (Modern Sort)", "Spain", 0x0C0A },
	{ "Spanish (Traditional Sort)", "Spain", 0x040A },
	{ "Spanish", "United States", 0x540A },
	{ "Spanish", "Uruguay", 0x380A },
	{ "Spanish", "Venezuela", 0x200A },
	{ "Sweden", "Finland", 0x081D },
	{ "Swedish", "Sweden", 0x041D },
	{ "Syriac", "Syria", 0x045A },
	{ "Tajik (Cyrillic)", "Tajikistan", 0x0428 },
	{ "Tamazight (Latin)", "Algeria", 0x085F },
	{ "Tamil", "India", 0x0449 },
	{ "Tatar", "Russia", 0x0444 },
	{ "Telugu", "India", 0x044A },
	{ "Thai", "Thailand", 0x041E },
	{ "Tibetan", "PRC", 0x0451 },
	{ "Turkish", "Turkey", 0x041F },
	{ "Turkmen", "Turkmenistan", 0x0442 },
	{ "Uighur", "PRC", 0x0480 },
	{ "Ukrainian", "Ukraine", 0x0422 },
	{ "Upper Sorbian", "Germany", 0x042E },
	{ "Urdu", "Islamic Republic of Pakistan", 0x0420 },
	{ "Uzbek (Cyrillic)", "Uzbekistan", 0x0843 },
	{ "Uzbek (Latin)", "Uzbekistan", 0x0443 },
	{ "Vietnamese", "Vietnam", 0x042A },
	{ "Welsh", "United Kingdom", 0x0452 },
	{ "Wolof", "Senegal", 0x0488 },
	{ "Yakut", "Russia", 0x0485 },
	{ "Yi", "PRC", 0x0478 },
	{ "Yoruba", "Nigeria", 0x046A }
    };

    const std::vector<numbered_string> nameIDs = {
	{  0, "Copyright Notice"},
	{  1, "Family Name"},
	{  2, "Subfamily Name"},
	{  3, "Unique ID"},
	{  4, "Full Name"},
	{  5, "Version"},
	{  6, "PostScript Name"},
	{  7, "Trademark"},
	{  8, "Manufacturer"},
	{  9, "Designer"},
	{ 10, "Descriptor"},
	{ 11, "Vendor URL"},
	{ 12, "Designer URL"},
	{ 13, "License Description"},
	{ 14, "License URL"},
	{ 15, "Reserved"},
	{ 16, "Typographic Family"},
	{ 17, "Typographic Subfamily"},
	{ 18, "Compatible Full"},
	{ 19, "Sample Text"},
	{ 20, "CID findfont Name"},
	{ 21, "WWS Family"},
	{ 22, "WWS Subfamily"},
	{ 23, "Light Background Palette"},
	{ 24, "Dark Background Palette"},
	{ 25, "Variations PostScript Name Prefix"},
    };

    const std::vector<numbered_string> sortedMacLanguages ();
    const std::vector<numbered_string>& specificList (int platform);
    const std::string iconvCharsetName (int platform, int charset);
};
#endif
